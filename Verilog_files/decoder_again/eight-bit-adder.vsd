$date
	Sat Apr 14 17:28:11 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testEightBitAdder $end
$scope module dut $end
$var wire 7 ! C [6:0] $end
$var wire 1 " C7 $end
$var wire 1 # Cin0 $end
$var wire 1 $ Cin0_new $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 8 ' b_new [7:0] $end
$var wire 1 ( subtract $end
$var wire 8 ) sum [7:0] $end
$var integer 32 * i [31:0] $end
$scope module adder0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 $ carryin $end
$var wire 1 - carryout $end
$var wire 1 . sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 carryin $end
$var wire 1 2 carryout $end
$var wire 1 3 sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 carryin $end
$var wire 1 7 carryout $end
$var wire 1 8 sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; carryin $end
$var wire 1 < carryout $end
$var wire 1 = sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ carryin $end
$var wire 1 A carryout $end
$var wire 1 B sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E carryin $end
$var wire 1 F carryout $end
$var wire 1 G sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J carryin $end
$var wire 1 K carryout $end
$var wire 1 L sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O carryin $end
$var wire 1 " carryout $end
$var wire 1 P sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0P
0O
0N
0M
1L
0K
1J
0I
0H
0G
1F
1E
0D
1C
0B
1A
1@
0?
1>
0=
1<
1;
0:
19
08
17
16
05
14
03
12
01
10
1/
1.
0-
1,
0+
b0 *
b1000001 )
0(
b11 '
b11 &
b111110 %
0$
0#
0"
b111110 !
$end
#100000
