$date
	Mon Apr 16 13:58:00 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testEightBitAdder $end
$scope module dut $end
$var wire 1 ! C15 $end
$var wire 1 " C7 $end
$var wire 1 # Cin0 $end
$var wire 16 $ a [15:0] $end
$var wire 16 % b [15:0] $end
$var wire 1 & subtract $end
$var wire 16 ' sum [15:0] $end
$scope module ls8b $end
$var wire 7 ( C [6:0] $end
$var wire 1 " C7 $end
$var wire 1 # Cin0 $end
$var wire 1 ) Cin0_new $end
$var wire 8 * a [7:0] $end
$var wire 8 + b [7:0] $end
$var wire 8 , b_new [7:0] $end
$var wire 1 & subtract $end
$var wire 8 - sum [7:0] $end
$scope module adder0 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 ) carryin $end
$var wire 1 0 carryout $end
$var wire 1 1 sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 carryin $end
$var wire 1 5 carryout $end
$var wire 1 6 sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 carryin $end
$var wire 1 : carryout $end
$var wire 1 ; sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > carryin $end
$var wire 1 ? carryout $end
$var wire 1 @ sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C carryin $end
$var wire 1 D carryout $end
$var wire 1 E sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H carryin $end
$var wire 1 I carryout $end
$var wire 1 J sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M carryin $end
$var wire 1 N carryout $end
$var wire 1 O sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R carryin $end
$var wire 1 " carryout $end
$var wire 1 S sum $end
$upscope $end
$upscope $end
$scope module ms8b $end
$var wire 7 T C [6:0] $end
$var wire 1 ! C7 $end
$var wire 1 " Cin0 $end
$var wire 1 U Cin0_new $end
$var wire 8 V a [7:0] $end
$var wire 8 W b [7:0] $end
$var wire 8 X b_new [7:0] $end
$var wire 1 & subtract $end
$var wire 8 Y sum [7:0] $end
$scope module adder0 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 U carryin $end
$var wire 1 \ carryout $end
$var wire 1 ] sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 ^ a $end
$var wire 1 _ b $end
$var wire 1 ` carryin $end
$var wire 1 a carryout $end
$var wire 1 b sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 e carryin $end
$var wire 1 f carryout $end
$var wire 1 g sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j carryin $end
$var wire 1 k carryout $end
$var wire 1 l sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 m a $end
$var wire 1 n b $end
$var wire 1 o carryin $end
$var wire 1 p carryout $end
$var wire 1 q sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t carryin $end
$var wire 1 u carryout $end
$var wire 1 v sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 w a $end
$var wire 1 x b $end
$var wire 1 y carryin $end
$var wire 1 z carryout $end
$var wire 1 { sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 ~ carryin $end
$var wire 1 ! carryout $end
$var wire 1 !" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
b0 Y
b0 X
b0 W
b0 V
0U
b0 T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
1J
0I
0H
0G
1F
1E
0D
0C
0B
1A
1@
0?
0>
1=
0<
1;
0:
09
18
07
16
05
04
03
12
11
00
1/
0.
b111111 -
b1101 ,
b1101 +
b110010 *
0)
b0 (
b111111 '
0&
b1101 %
b110010 $
0#
0"
0!
$end
#100000
