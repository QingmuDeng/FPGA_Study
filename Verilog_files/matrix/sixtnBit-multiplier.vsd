$date
	Sat Apr 14 17:28:18 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testSixtnBitAdder $end
$scope module dut $end
$var wire 8 ! A [7:0] $end
$var wire 8 " B [7:0] $end
$var wire 7 # Cout [6:0] $end
$var wire 16 $ P [15:0] $end
$var wire 8 % out_B0A [7:0] $end
$var wire 8 & out_B1A [7:0] $end
$var wire 8 ' out_B2A [7:0] $end
$var wire 8 ( out_B3A [7:0] $end
$var wire 8 ) out_B4A [7:0] $end
$var wire 8 * out_B5A [7:0] $end
$var wire 8 + out_B6A [7:0] $end
$var wire 8 , out_B7A [7:0] $end
$var wire 8 - sum0 [7:0] $end
$var wire 8 . sum1 [7:0] $end
$var wire 8 / sum2 [7:0] $end
$var wire 8 0 sum3 [7:0] $end
$var wire 8 1 sum4 [7:0] $end
$var wire 8 2 sum5 [7:0] $end
$var wire 8 3 sum6 [7:0] $end
$scope module adder0 $end
$var wire 7 4 C [6:0] $end
$var wire 1 5 C7 $end
$var wire 1 6 Cin0 $end
$var wire 1 7 Cin0_new $end
$var wire 8 8 a [7:0] $end
$var wire 8 9 b [7:0] $end
$var wire 8 : b_new [7:0] $end
$var wire 1 ; subtract $end
$var wire 8 < sum [7:0] $end
$scope module adder0 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 7 carryin $end
$var wire 1 ? carryout $end
$var wire 1 @ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C carryin $end
$var wire 1 D carryout $end
$var wire 1 E sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H carryin $end
$var wire 1 I carryout $end
$var wire 1 J sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M carryin $end
$var wire 1 N carryout $end
$var wire 1 O sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R carryin $end
$var wire 1 S carryout $end
$var wire 1 T sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W carryin $end
$var wire 1 X carryout $end
$var wire 1 Y sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ carryin $end
$var wire 1 ] carryout $end
$var wire 1 ^ sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a carryin $end
$var wire 1 5 carryout $end
$var wire 1 b sum $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 7 c C [6:0] $end
$var wire 1 d C7 $end
$var wire 1 e Cin0 $end
$var wire 1 f Cin0_new $end
$var wire 8 g a [7:0] $end
$var wire 8 h b [7:0] $end
$var wire 8 i b_new [7:0] $end
$var wire 1 j subtract $end
$var wire 8 k sum [7:0] $end
$scope module adder0 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 f carryin $end
$var wire 1 n carryout $end
$var wire 1 o sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r carryin $end
$var wire 1 s carryout $end
$var wire 1 t sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w carryin $end
$var wire 1 x carryout $end
$var wire 1 y sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | carryin $end
$var wire 1 } carryout $end
$var wire 1 ~ sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" carryin $end
$var wire 1 $" carryout $end
$var wire 1 %" sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" carryin $end
$var wire 1 )" carryout $end
$var wire 1 *" sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 +" a $end
$var wire 1 ," b $end
$var wire 1 -" carryin $end
$var wire 1 ." carryout $end
$var wire 1 /" sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" carryin $end
$var wire 1 d carryout $end
$var wire 1 3" sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 7 4" C [6:0] $end
$var wire 1 5" C7 $end
$var wire 1 6" Cin0 $end
$var wire 1 7" Cin0_new $end
$var wire 8 8" a [7:0] $end
$var wire 8 9" b [7:0] $end
$var wire 8 :" b_new [7:0] $end
$var wire 1 ;" subtract $end
$var wire 8 <" sum [7:0] $end
$scope module adder0 $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 7" carryin $end
$var wire 1 ?" carryout $end
$var wire 1 @" sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 A" a $end
$var wire 1 B" b $end
$var wire 1 C" carryin $end
$var wire 1 D" carryout $end
$var wire 1 E" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 H" carryin $end
$var wire 1 I" carryout $end
$var wire 1 J" sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 M" carryin $end
$var wire 1 N" carryout $end
$var wire 1 O" sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" carryin $end
$var wire 1 S" carryout $end
$var wire 1 T" sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 U" a $end
$var wire 1 V" b $end
$var wire 1 W" carryin $end
$var wire 1 X" carryout $end
$var wire 1 Y" sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" carryin $end
$var wire 1 ]" carryout $end
$var wire 1 ^" sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 a" carryin $end
$var wire 1 5" carryout $end
$var wire 1 b" sum $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 7 c" C [6:0] $end
$var wire 1 d" C7 $end
$var wire 1 e" Cin0 $end
$var wire 1 f" Cin0_new $end
$var wire 8 g" a [7:0] $end
$var wire 8 h" b [7:0] $end
$var wire 8 i" b_new [7:0] $end
$var wire 1 j" subtract $end
$var wire 8 k" sum [7:0] $end
$scope module adder0 $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 f" carryin $end
$var wire 1 n" carryout $end
$var wire 1 o" sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 p" a $end
$var wire 1 q" b $end
$var wire 1 r" carryin $end
$var wire 1 s" carryout $end
$var wire 1 t" sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 w" carryin $end
$var wire 1 x" carryout $end
$var wire 1 y" sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 z" a $end
$var wire 1 {" b $end
$var wire 1 |" carryin $end
$var wire 1 }" carryout $end
$var wire 1 ~" sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 ## carryin $end
$var wire 1 $# carryout $end
$var wire 1 %# sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# carryin $end
$var wire 1 )# carryout $end
$var wire 1 *# sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 +# a $end
$var wire 1 ,# b $end
$var wire 1 -# carryin $end
$var wire 1 .# carryout $end
$var wire 1 /# sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 0# a $end
$var wire 1 1# b $end
$var wire 1 2# carryin $end
$var wire 1 d" carryout $end
$var wire 1 3# sum $end
$upscope $end
$upscope $end
$scope module adder4 $end
$var wire 7 4# C [6:0] $end
$var wire 1 5# C7 $end
$var wire 1 6# Cin0 $end
$var wire 1 7# Cin0_new $end
$var wire 8 8# a [7:0] $end
$var wire 8 9# b [7:0] $end
$var wire 8 :# b_new [7:0] $end
$var wire 1 ;# subtract $end
$var wire 8 <# sum [7:0] $end
$scope module adder0 $end
$var wire 1 =# a $end
$var wire 1 ># b $end
$var wire 1 7# carryin $end
$var wire 1 ?# carryout $end
$var wire 1 @# sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 A# a $end
$var wire 1 B# b $end
$var wire 1 C# carryin $end
$var wire 1 D# carryout $end
$var wire 1 E# sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# carryin $end
$var wire 1 I# carryout $end
$var wire 1 J# sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 K# a $end
$var wire 1 L# b $end
$var wire 1 M# carryin $end
$var wire 1 N# carryout $end
$var wire 1 O# sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 P# a $end
$var wire 1 Q# b $end
$var wire 1 R# carryin $end
$var wire 1 S# carryout $end
$var wire 1 T# sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 U# a $end
$var wire 1 V# b $end
$var wire 1 W# carryin $end
$var wire 1 X# carryout $end
$var wire 1 Y# sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 Z# a $end
$var wire 1 [# b $end
$var wire 1 \# carryin $end
$var wire 1 ]# carryout $end
$var wire 1 ^# sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 _# a $end
$var wire 1 `# b $end
$var wire 1 a# carryin $end
$var wire 1 5# carryout $end
$var wire 1 b# sum $end
$upscope $end
$upscope $end
$scope module adder5 $end
$var wire 7 c# C [6:0] $end
$var wire 1 d# C7 $end
$var wire 1 e# Cin0 $end
$var wire 1 f# Cin0_new $end
$var wire 8 g# a [7:0] $end
$var wire 8 h# b [7:0] $end
$var wire 8 i# b_new [7:0] $end
$var wire 1 j# subtract $end
$var wire 8 k# sum [7:0] $end
$scope module adder0 $end
$var wire 1 l# a $end
$var wire 1 m# b $end
$var wire 1 f# carryin $end
$var wire 1 n# carryout $end
$var wire 1 o# sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 r# carryin $end
$var wire 1 s# carryout $end
$var wire 1 t# sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 u# a $end
$var wire 1 v# b $end
$var wire 1 w# carryin $end
$var wire 1 x# carryout $end
$var wire 1 y# sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 z# a $end
$var wire 1 {# b $end
$var wire 1 |# carryin $end
$var wire 1 }# carryout $end
$var wire 1 ~# sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var wire 1 #$ carryin $end
$var wire 1 $$ carryout $end
$var wire 1 %$ sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ carryin $end
$var wire 1 )$ carryout $end
$var wire 1 *$ sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 +$ a $end
$var wire 1 ,$ b $end
$var wire 1 -$ carryin $end
$var wire 1 .$ carryout $end
$var wire 1 /$ sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 0$ a $end
$var wire 1 1$ b $end
$var wire 1 2$ carryin $end
$var wire 1 d# carryout $end
$var wire 1 3$ sum $end
$upscope $end
$upscope $end
$scope module adder6 $end
$var wire 7 4$ C [6:0] $end
$var wire 1 5$ C7 $end
$var wire 1 6$ Cin0 $end
$var wire 1 7$ Cin0_new $end
$var wire 8 8$ a [7:0] $end
$var wire 8 9$ b [7:0] $end
$var wire 8 :$ b_new [7:0] $end
$var wire 1 ;$ subtract $end
$var wire 8 <$ sum [7:0] $end
$scope module adder0 $end
$var wire 1 =$ a $end
$var wire 1 >$ b $end
$var wire 1 7$ carryin $end
$var wire 1 ?$ carryout $end
$var wire 1 @$ sum $end
$upscope $end
$scope module adder1 $end
$var wire 1 A$ a $end
$var wire 1 B$ b $end
$var wire 1 C$ carryin $end
$var wire 1 D$ carryout $end
$var wire 1 E$ sum $end
$upscope $end
$scope module adder2 $end
$var wire 1 F$ a $end
$var wire 1 G$ b $end
$var wire 1 H$ carryin $end
$var wire 1 I$ carryout $end
$var wire 1 J$ sum $end
$upscope $end
$scope module adder3 $end
$var wire 1 K$ a $end
$var wire 1 L$ b $end
$var wire 1 M$ carryin $end
$var wire 1 N$ carryout $end
$var wire 1 O$ sum $end
$upscope $end
$scope module adder4 $end
$var wire 1 P$ a $end
$var wire 1 Q$ b $end
$var wire 1 R$ carryin $end
$var wire 1 S$ carryout $end
$var wire 1 T$ sum $end
$upscope $end
$scope module adder5 $end
$var wire 1 U$ a $end
$var wire 1 V$ b $end
$var wire 1 W$ carryin $end
$var wire 1 X$ carryout $end
$var wire 1 Y$ sum $end
$upscope $end
$scope module adder6 $end
$var wire 1 Z$ a $end
$var wire 1 [$ b $end
$var wire 1 \$ carryin $end
$var wire 1 ]$ carryout $end
$var wire 1 ^$ sum $end
$upscope $end
$scope module adder7 $end
$var wire 1 _$ a $end
$var wire 1 `$ b $end
$var wire 1 a$ carryin $end
$var wire 1 5$ carryout $end
$var wire 1 b$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
b0 <$
0;$
b0 :$
b0 9$
b0 8$
07$
06$
05$
b0 4$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
1o#
0n#
0m#
1l#
b1 k#
0j#
b0 i#
b0 h#
b1 g#
0f#
0e#
0d#
b0 c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
1E#
0D#
0C#
0B#
1A#
0@#
0?#
0>#
0=#
b10 <#
0;#
b0 :#
b0 9#
b10 8#
07#
06#
05#
b0 4#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
1y"
0x"
0w"
0v"
1u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
b100 k"
0j"
b0 i"
b0 h"
b100 g"
0f"
0e"
0d"
b0 c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
1O"
0N"
0M"
1L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
1@"
0?"
1>"
0="
b1001 <"
0;"
b1001 :"
b1001 9"
b0 8"
07"
06"
05"
b0 4"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
b0 k
0j
b0 i
b0 h
b0 g
0f
0e
0d
b0 c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
b0 <
0;
b0 :
b0 9
b0 8
07
06
05
b0 4
b0 3
b1 2
b10 1
b100 0
b1001 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b1001 (
b0 '
b0 &
b0 %
b1001000 $
b0 #
b1000 "
b1001 !
$end
#100000
1="
b1 8"
1t
b10 .
b10 k
1p
b1001000 $
b10 g
1@"
b1001 /
b1001 <"
1J
b100 -
b100 <
0>"
1F
b1000 :"
b100 8
b1000 %
b1000 (
b1000 9"
b1001 "
b1000 !
#200000
